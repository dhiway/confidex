openapi: 3.0.0
info:
  title: Beckn Protocol Registry Infrastructure API
  description: This document contains the API specification for the Registry infrastructure of a beckn-enabled network. The Registry API forms the trust layer of beckn protocol. When implemented, they enable creation of an infrastructure that allow trusted transactions between network participants to take place by means of digital signature authentication. The core infrastructure is called the Network Registry or simply, Registry. Any network participant that is listed on the registry can be assumed to have successfully passed the certfication and compliance process of the network, and hence be trusted to transact with. 
  version: "1.0.0"
security:
  - SubscriberAuth: []
paths:
  /lookup:
    description: Look up platforms listed on the network registry. This is a protected endpoint only accessible to network participants that have subscribed to the network (i.e Subscribers). Any subscriber can query the Registry by sending a `Lookup` object. The Registry will respond with all the platforms that match the lookup parameters. 
    post:
      tags:
        - Registry
      requestBody:
        content:
          application/json:
            schema:
              $ref : "./io/Lookup.yaml"
      responses:
        default:
          $ref: "./io/LookupResponse.yaml"
  /subscribe:
    description: Subscribe to a network. This endpoint allows registered network participants (a.k.a Subscribers), to update their subscription details like `domain`, `location`, `signing_public_key`, `encr_public_key` on the registry. The fields that can be updated can vary from network to network. Every network policy must contain the fields that can be updated for each type of subscriber. For example, the network policy may allow BAPs and BPPs to update all fields, but BGs may not be allowed to update any field except the public keys. 
    post:
      tags:
        - Registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./io/Subscribe.yaml"
      responses:
        default:
          $ref: "./io/SubscriptionResponse.yaml"

  /on_subscribe:
    description: This endpoint is implemented by all platforms that have successfully passed the certification and compliance requirements on a network. In this endpoint, the Subscriber receives an encrypted challenge string generated by the Registry to verify the subscription details of the Network Participant sent during the `subscribe` call. During this call, Registry also validates the SSL certificate of Subscriber. If the SSL certificate is invalid, the Registry will update the subscriberâ€™s status = INVALID_SSL and call the Subscriber's `on_subscribe` endpoint again. Anytime the state of the Subscriber changes in the registry, the Registry can make an unsolicited call to the subscriber's `on_subscribe` endpoint. This request must be digitally signed by the Registry. The Registry's public key must be published at a publicly accessible trusted location so that the Subscribers can save it on their systems.
    post:
      tags:
        - Subscriber (BAP, BPP, BG)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./io/OnSubscribe.yaml"
      responses:
        default:
          $ref: "./io/OnSubscribeResponse.yaml"
components:
  securitySchemes:
    SubscriberAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Signature of message body using signing public key of the caller. <br/><br/>Format:<br/><br/><code>Authorization : Signature keyId="{subscriber_id}|{key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64(signing string)"</code>'
  schemas:
    $ref: "./schema/index.yaml"

