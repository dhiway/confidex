openapi: 3.0.0
info:
  title: Issue and Grievance Management (IGM) for ONDC
  description: ONDC Issue and Grievance Management (IGM)  API Specification
  version: 1.0.0
security:
  - SubscriberAuth: []
paths:
  /publish:
    post:
      tags:
      - "Rating API Server"
      description: "Publish the ratings to the chain, for the entity with given transaction / message ID "
      operationId: "publishRatings"
      requestBody:
        description: "Write the ratings to the chain. Notice that this can take 1 or more entries from the NP (Network Participant) and submit it to the API (which inturn will write to the chain)."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublishRating"
        required: "true"
      responses:
        default:
          $ref: "#/components/schemas/DefaultResponse"

  /on_publish:
    post:
      tags:
      - "Rating API Client (NP)"
      description: "Inform the client about success or failure of the publish rating"
      operationId: "onPublishRating"
      requestBody:
        description: "Callback of publish rating operation to the chain. Considering the /publish call will have multiple entries, this can collate all the entries and send the response, upon completion."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OnPublishRating"
        required: "true"
      responses:
        default:
          $ref: "#/components/schemas/DefaultResponse"

  /revise:
    post:
      tags:
      - "Rating API Server"
      description: "Revise ratings in the chain. This can happen due to 2 reasons. 1 is when the user themself changes the given rating over the period (possible for seller to settle bad rating with the buyer), or some discrepancies are found during the auditing."
      operationId: "reviseRatings"
      requestBody:
        description: "revise the ratings"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviseRating"
        required: "true"
      responses:
        default:
          $ref: "#/components/schemas/DefaultResponse"

  /on_revise:
    post:
      tags:
      - "Rating API Client (NP)"
      description: "update the status of the revise operation on the chain."
      operationId: "onReviseRating"
      requestBody:
        description: "update the ratings"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OnReviseRating"
        required: "true"
      responses:
        default:
          $ref: "#/components/schemas/DefaultResponse"

  /query:
    post:
      tags:
      - "Rating API Server"
      description: "Read aggregate score, read all given entities ratings, more details based on parameters"
      operationId: "Query"
      requestBody:
        description: "query the score"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryRating"
        required: "true"
      responses:
        default:
          $ref: "#/components/schemas/DefaultResponse"

  /on_query:
    post:
      tags:
      - "Rating API Client (NP)"
      description: "Response / Callback to the query call"
      operationId: "onQuery"
      requestBody:
        description: "query the ratings / score"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OnQueryRating"
        required: "true"
      responses:
        200:
          description: "Aggregated Score details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/200_Res"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    SubscriberAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Signature of message body using Collector or Receiver subscriber''s signing public key. <br/><br/>Format:<br/><br/><code>Authorization : Signature keyId="{subscriber_id}|{unique_key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64(signing string)"</code>'
  schemas:
    Error:
      description: Describes an error object
      type: object
      properties:
        type:
          type: string
          enum:
            - CONTEXT-ERROR
            - CORE-ERROR
            - DOMAIN-ERROR
            - POLICY-ERROR
            - JSON-SCHEMA-ERROR 
    DefaultResponse:
      description: >-
        Acknowledgement of message received after successful validation of
        schema and signature
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: object
                properties:
                  ack:
                    allOf:
                      - $ref: '#/components/schemas/Ack'
                      - type: object
                      - properties:
                          status:
                            enum:
                              - ACK
                              - NACK
                required:
                  - ack
              error:
                $ref: '#/components/schemas/Error'
            required:
              - message
    200_Res:
      type: "object"
      properties:
        ack:
          $ref: "#/components/schemas/Ack"
    Ack:
      description: >-
        Describes the acknowledgement sent in response to an API call. If the
        implementation uses HTTP/S, then Ack must be returned in the same
        session. Every API call to a BPP must be responded to with an Ack
        whether the BPP intends to respond with a callback or not. This has one
        property called `status` that indicates the status of the
        Acknowledgement.
      type: object
      additionalProperties: false
      properties:
        status:
          type: string
          description: >-
            The status of the acknowledgement. If the request passes the
            validation criteria of the BPP, then this is set to ACK. If a BPP
            responds with status = `ACK` to a request, it is required to respond
            with a callback. If the request fails the validation criteria, then
            this is set to NACK. Additionally, if a BPP does not intend to
            respond with a callback even after the request meets the validation
            criteria, it should set this value to `NACK`.
          enum:
            - ACK
            - NACK
    Descriptor:
      description: Physical description of something.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        code:
          type: string
        short_desc:
          type: string
        long_desc:
          type: string
        additional_desc:
          type: object
          additionalProperties: false
          properties:
            url:
              type: string
            content_type:
              type: string
              enum:
                - text/plain
                - text/html
                - application/json

    OnPublishResult_20x:
      type: "object"
      properties:
        status:
          type: "boolean"
          example: "true"

    PublishRating:
      type: "object"
      properties:
        context:
          $ref: "#/components/schemas/Context"
        message:
          $ref: "#/components/schemas/PublishMessage"
    OnPublishRating:
      type: "object"
      properties:
        context:
          $ref: "#/components/schemas/Context"
        message:
          $ref: "#/components/schemas/OnPublishResult_20x"
    OnReviseResult_20x:
      type: "object"
      properties:
        status:
          type: "boolean"
          example: "true"
    ReviseRating:
      type: "object"
      properties:
        context:
          $ref: "#/components/schemas/Context"
        message:
          $ref: "#/components/schemas/ReviseMessage"
    OnReviseRating:
      type: "object"
      properties:
        context:
          $ref: "#/components/schemas/Context"
        message:
          $ref: "#/components/schemas/OnReviseResult_20x"

    QueryRating:
      type: "object"
      properties:
        context:
          $ref: "#/components/schemas/Context"
        message:
          $ref: "#/components/schemas/QueryMessage"
    QueryMessage:
      type: "object"
      properties:
        entity_list:
          type: "array"
          items:
            type: "object"
            properties:
              entityId:
                type: "string"
                example: "286cf1b1-3e16-448f-b675-3b232e82174d"
              ratingType:
                type: "string"
                example: "Overall"
    OnQueryRating:
      type: "object"
      properties:
        context:
          $ref: "#/components/schemas/Context"
        message:
          type: "object"
          properties:
            scores:
              type: "array"
              items:
                type: "object"
                properties:
                  entityId:
                    type: "string"
                    example: "286cf1b1-3e16-448f-b675-3b232e82174d"
                  entityName:
                    type: "string"
                  score:
                    type: "number"
                    example: 3.70
                  totalRating:
                    type: "number"
                    example: 280
                  countOfTxn:
                    type: "number"
                    example: 73

    Context:
      type: "object"
      properties:
        domain:
          type: "string"
          example: "seller-rating"
        action:
          type: "string"
          example: "/on_publish"
        version:
          type: "string"
          example: "0.0.1"
        provider_uri:
          type: "string"
          example: "https://api.provider-example.com/api/v1"
        provider_id:
          type: "string"
          example: "All in One - Market Place"
        publisher_uri:
          type: "string"
          example: "https://api.provider-example.com/api/v1"
        publisher_id:
          type: "string"
          example: "All in One - Market Place"
        registry_id:
          type: "string"
          example: "Confidex - Rating Provider Registry's ID"
        transaction_id:
          description: "The transaction ID to be kept same across revisions"
          type: "string"
        message_id:
          description: "The message ID is unique to every call, and should be used to match the callback"
          type: "string"
        timestamp:
          type: "string"
          example: "2021-06-29T10:52:01.620Z"
        ttl:
          type: "string"
          exmple: "PT30S"
        location:
          type: "object"
          example: "currently empty, but can be used in future for different contexts of network"
    PublishMessage:
      type: "object"
      properties:
        rating:
          description: "List of entity ratings"
          type: "array"
          items:
            $ref: "#/components/schemas/PublishEntry"
    ReviseMessage:
      type: "object"
      properties:
        rating:
          description: "List of entity rating to be revised"
          type: "array"
          items:
            $ref: "#/components/schemas/ReviseEntry"
        referenceId:
          type: "string"
          example: "rating:cord:r35tLfL1ouJhXLGqnGM4rK9hCM5RQrpjNN47KZ8cEBQbdoKtn"
    PublishEntry:
      type: "object"
      properties:
        entity_id:
          type: "string"
          example: "226c67bd-9aa7-4aef-8d62-c69e3a669ce0"
        entity_name:
          type: "string"
          example: "Gupta Kirana Store"
        ratingType:
          type: "string"
          example: "Overall"
        countOfTxn:
          type: "number"
          example: "100"
        totalRating:
          type: "number"
          example: "320"
    ReviseEntry:
      type: "object"
      properties:
        entity_id:
          type: "string"
          example: "226c67bd-9aa7-4aef-8d62-c69e3a669ce0"
        entity_name:
          type: "string"
          example: "Gupta Kirana Store"
        ratingType:
          type: "string"
          example: "Overall"
        countOfTxn:
          type: "number"
          example: "80"
        totalRating:
          type: "number"
          example: "280"

servers:
  # Added by API Auto Mocking Plugin
  - description: Staging Network
    url: https://virtserver.swaggerhub.com/ONDC/ONDC-Protocol-Rating/0.0.1
    